//Q41: Write a program to swap the first and last digit of a number.

/*
Sample Test Cases:
Input 1:
1234
Output 1:
4231

Input 2:
1001
Output 2:
1001

*/
#include <stdio.h>
#include <math.h>

int main() {
    int num, original_num, first_digit, last_digit, digits = 0, swapped_num;
    int power_of_10 = 1;

    // Prompt the user to enter an integer
    printf("Input an integer: ");
    scanf("%d", &num);

    // Store the original number and get the last digit
    original_num = num;
    last_digit = num % 10;

    // Use a for loop to count digits and find the first digit
    for (; num >= 10; num /= 10) {
        digits++;
        power_of_10 *= 10;
    }
    first_digit = num;

    // Reconstruct the number with swapped first and last digits
    // The swapped_num is built from the last_digit, middle part, and first_digit
    swapped_num = last_digit * power_of_10; // Place the last digit at the beginning
    swapped_num += (original_num % power_of_10) / 10; // Add the middle part
    swapped_num = swapped_num * 10 + first_digit; // Place the first digit at the end

    // Handle single-digit numbers where no swap is needed
    if (original_num < 10) {
        printf("Swapped number: %d\n", original_num);
    } else {
        printf("Swapped number: %d\n", swapped_num);
    }

    return 0;
}
